# Copyright (c) 2017, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $compiler == spec_parser ]

# Negative tests with non-syntax compile-time errors.
bad_initializer1_negative_test: Skip # Negative, not syntax.
bad_initializer2_negative_test: Skip # Negative, not syntax.
bad_named_constructor_negative_test: Skip # Negative, not syntax.
body_less_constructor_wrong_arg_negative_test: Skip # Negative, not syntax.
closure_call_wrong_argument_count_negative_test: Skip # Negative, not syntax.
const_optional_args_negative_test: Skip # Negative, not syntax.
constructor3_negative_test: Skip # Negative, not syntax.
constructor_call_wrong_argument_count_negative_test: Skip # Negative, not syntax.
constructor_redirect1_negative_test/01: Skip # Negative, not syntax.
constructor_redirect1_negative_test/none: Skip # Negative, not syntax.
constructor_redirect2_negative_test: Skip # Negative, not syntax.
constructor_setter_negative_test: Skip # Negative, not syntax.
duplicate_export_negative_test: Skip # Negative, not syntax.
duplicate_interface_negative_test: Skip # Negative, not syntax.
inst_field_initializer1_negative_test: Skip # Negative, not syntax.
instance_call_wrong_argument_count_negative_test: Skip # Negative, not syntax.
instance_method2_negative_test: Skip # Negative, not syntax.
instance_method_negative_test: Skip # Negative, not syntax.
interface2_negative_test: Skip # Negative, not syntax.
interface_static_method_negative_test: Skip # Negative, not syntax.
interface_static_non_final_fields_negative_test: Skip # Negative, not syntax.
label2_negative_test: Skip # Negative, not syntax.
label3_negative_test: Skip # Negative, not syntax.
label5_negative_test: Skip # Negative, not syntax.
label6_negative_test: Skip # Negative, not syntax.
library_negative_test: Skip # Negative, not syntax.
list_literal2_negative_test: Skip # Negative, not syntax.
map_literal2_negative_test: Skip # Negative, not syntax.
no_such_method_negative_test: Skip # Negative, not syntax.
non_const_super_negative_test: Skip # Negative, not syntax.
override_field_method1_negative_test: Skip # Negative, not syntax.
override_field_method2_negative_test: Skip # Negative, not syntax.
override_field_method4_negative_test: Skip # Negative, not syntax.
override_field_method5_negative_test: Skip # Negative, not syntax.
parameter_initializer1_negative_test: Skip # Negative, not syntax.
parameter_initializer2_negative_test: Skip # Negative, not syntax.
parameter_initializer3_negative_test: Skip # Negative, not syntax.
parameter_initializer4_negative_test: Skip # Negative, not syntax.
parameter_initializer6_negative_test: Skip # Negative, not syntax.
prefix10_negative_test: Skip # Negative, not syntax.
prefix11_negative_test: Skip # Negative, not syntax.
prefix12_negative_test: Skip # Negative, not syntax.
prefix13_negative_test: Skip # Negative, not syntax.
prefix15_negative_test: Skip # Negative, not syntax.
prefix1_negative_test: Skip # Negative, not syntax.
prefix2_negative_test: Skip # Negative, not syntax.
prefix3_negative_test: Skip # Negative, not syntax.
prefix4_negative_test: Skip # Negative, not syntax.
prefix5_negative_test: Skip # Negative, not syntax.
prefix6_negative_test: Skip # Negative, not syntax.
prefix7_negative_test: Skip # Negative, not syntax.
prefix8_negative_test: Skip # Negative, not syntax.
private_member1_negative_test: Skip # Negative, not syntax.
private_member2_negative_test: Skip # Negative, not syntax.
private_member3_negative_test: Skip # Negative, not syntax.
script1_negative_test: Skip # Negative, not syntax.
script2_negative_test: Skip # Negative, not syntax.
string_unicode1_negative_test: Skip # Negative, not syntax.
string_unicode2_negative_test: Skip # Negative, not syntax.
string_unicode3_negative_test: Skip # Negative, not syntax.
string_unicode4_negative_test: Skip # Negative, not syntax.
unhandled_exception_negative_test: Skip # Negative, not syntax.

# Tests containing intentional syntax errors.
double_invalid_test: Skip # Contains illegaly formatted double.

# Tests containing `native` (not part of the Dart grammar).
const_native_factory_test: Skip # Uses `native`.

# Wrong tests.
built_in_identifier_prefix_test: Skip # A built-in identifier can _not_ be a prefix.

# Tests containing non-syntax compile-time errors.
abstract_beats_arguments_test: Fail # Not syntax.
abstract_exact_selector_test/01: Fail # Not syntax.
abstract_factory_constructor_test/00: Fail # Not syntax.
abstract_getter_test/01: Fail # Not syntax.
abstract_override_adds_optional_args_concrete_subclass_test: Fail # Not syntax.
abstract_override_adds_optional_args_concrete_test: Fail # Not syntax.
abstract_override_adds_optional_args_supercall_test: Fail # Not syntax.
abstract_syntax_test/00: Fail # Not syntax.
abstract_syntax_test/01: Fail # Dart.g does not make it a syntax error to have an abstract static method.
additional_interface_adds_optional_args_concrete_subclass_test: Fail # Not syntax.
additional_interface_adds_optional_args_concrete_test: Fail # Not syntax.
additional_interface_adds_optional_args_supercall_test: Fail # Not syntax.
assign_static_type_test/01: Fail # Not syntax.
assign_static_type_test/02: Fail # Not syntax.
assign_static_type_test/03: Fail # Not syntax.
assign_static_type_test/04: Fail # Not syntax.
assign_static_type_test/05: Fail # Not syntax.
assign_static_type_test/06: Fail # Not syntax.
assign_to_type_test/01: Fail # Not syntax.
assign_to_type_test/02: Fail # Not syntax.
assign_to_type_test/03: Fail # Not syntax.
assign_to_type_test/04: Fail # Not syntax.
assign_top_method_test: Fail # Not syntax.
async_await_syntax_test/a05g: Fail # Dart.g does not make it a syntax error to have yield in an async function.
async_await_syntax_test/a05h: Fail # Dart.g does not make it a syntax error to have yield* in an async function.
async_await_syntax_test/a06b: Fail # Dart.g does not make it a syntax error to have await for in a sync* function.
async_await_syntax_test/a10a: Fail # Not syntax.
async_await_syntax_test/b06b: Fail # Dart.g does not make it a syntax error to have await on a for (not for-in).
async_await_syntax_test/b10a: Fail # Not syntax.
async_await_syntax_test/b10b: Fail # Dart.g does not make it a syntax error to have yield in an async function.
async_await_syntax_test/c10a: Fail # Not syntax.
async_await_syntax_test/c11a: Fail # Dart.g does not make it a syntax error to have yield in an async function. Analyzer error may be wrong.
async_await_syntax_test/c11b: Fail # Dart.g does not make it a syntax error to have yield* in an async function. Analyzer error may be wrong.
async_await_syntax_test/d08b: Fail # Not syntax.
async_await_syntax_test/d10a: Fail # Not syntax.
async_await_syntax_test/e1: Fail # Dart.g does not make it a syntax error to have async on a factory.
async_await_syntax_test/e2: Fail # Dart.g does not make it a syntax error to have async* on a factory.
async_await_syntax_test/e3: Fail # Dart.g does not make it a syntax error to have sync* on a factory.
async_await_syntax_test/e7: Fail # Dart.g does not make it a syntax error to have async on a generative constructor.
async_await_syntax_test/e8: Fail # Dart.g does not make it a syntax error to have async* on a generative constructor.
async_await_syntax_test/e9: Fail # Dart.g does not make it a syntax error to have sync* on a generative constructor.
async_or_generator_return_type_stacktrace_test/01: Fail # Not syntax.
async_or_generator_return_type_stacktrace_test/02: Fail # Not syntax.
async_or_generator_return_type_stacktrace_test/03: Fail # Not syntax.
async_return_types_test/nestedFuture: Fail # Not syntax.
async_return_types_test/return_value_sync_star: Fail # Not syntax.
async_return_types_test/tooManyTypeParameters: Fail # Not syntax.
async_return_types_test/wrongReturnType: Fail # Not syntax.
async_return_types_test/wrongTypeParameter: Fail # Not syntax.
await_backwards_compatibility_test/await3: Fail # Dart.g does not make it a syntax error to use await as a keyword in regular function.
await_backwards_compatibility_test/await4: Fail # Dart.g does not make it a syntax error to use await as a keyword in regular function.
bad_constructor_test/00: Fail # Not syntax.
bad_constructor_test/04: Fail # Not syntax.
bad_constructor_test/06: Fail # Not syntax.
bad_named_parameters2_test/01: Fail # Not syntax.
bad_named_parameters_test/01: Fail # TODO: marked as compile-time error, is not syntax, but seems wrong.
bad_named_parameters_test/02: Fail # Not syntax.
bad_named_parameters_test/03: Fail # Not syntax.
bad_named_parameters_test/04: Fail # Not syntax.
bad_named_parameters_test/05: Fail # Not syntax.
bad_override_test/01: Fail # Not syntax.
bad_override_test/02: Fail # Not syntax.
bad_override_test/03: Fail # Not syntax.
bad_override_test/04: Fail # Not syntax.
bad_override_test/05: Fail # Not syntax.
bad_override_test/06: Fail # Not syntax.
bit_operations_test/01: Fail # Not syntax.
bit_operations_test/02: Fail # Not syntax.
bit_operations_test/03: Fail # Not syntax.
bit_operations_test/04: Fail # Not syntax.
black_listed_test/01: Fail # Not syntax.
black_listed_test/03: Fail # Not syntax.
black_listed_test/05: Fail # Not syntax.
black_listed_test/07: Fail # Not syntax.
black_listed_test/09: Fail # Not syntax.
black_listed_test/13: Fail # Not syntax.
built_in_identifier_illegal_test/04: Fail # Dart.g does not make it a syntax error to declare a class `dynamic`.
call_constructor_on_unresolvable_class_test/01: Fail # Not syntax.
call_constructor_on_unresolvable_class_test/02: Fail # Not syntax.
call_constructor_on_unresolvable_class_test/03: Fail # Not syntax.
call_non_method_field_test/01: Fail # Not syntax.
call_non_method_field_test/02: Fail # Not syntax.
call_nonexistent_constructor_test/01: Fail # Not syntax.
call_nonexistent_constructor_test/02: Fail # Not syntax.
call_nonexistent_static_test/*: Fail # Not syntax.
call_nonexistent_static_test/none: Pass
call_through_getter_test/01: Fail # Not syntax.
call_through_getter_test/02: Fail # Not syntax.
call_type_literal_test/01: Fail # Not syntax.
case_expression_with_assignment_test/01: Fail # Not syntax.
cast_test/04: Fail # Not syntax.
cast_test/05: Fail # Not syntax.
checked_null_test/01: Fail # Not syntax.
checked_setter2_test: Fail # Not syntax.
checked_setter3_test/01: Fail # Not syntax.
checked_setter3_test/02: Fail # Not syntax.
checked_setter3_test/03: Fail # Not syntax.
checked_setter_test: Fail # Not syntax.
class_cycle2_test/01: Fail # Not syntax.
class_cycle2_test/02: Fail # Not syntax.
class_cycle_test/00: Fail # Not syntax.
class_cycle_test/01: Fail # Not syntax.
class_cycle_test/02: Fail # Not syntax.
class_cycle_test/03: Fail # Not syntax.
class_keyword_test/02: Fail # Dart.g does not make it an error to have a string interpolation `$id` where id is a reserved word. Maybe it should?
class_literal_static_test/*: Fail # Not syntax.
class_literal_static_test/none: Pass
class_literal_test/*: Fail # Not syntax.
class_literal_test/none: Pass
class_override_test: Fail # Not syntax.
closure_internals_test/01: Fail # Not syntax.
closure_internals_test/02: Fail # Not syntax.
closure_internals_test/03: Fail # Not syntax.
closure_invoked_through_interface_target_field_test: Fail # Not syntax.
closure_invoked_through_interface_target_getter_test: Fail # Not syntax.
compile_time_constant10_test/01: Fail # Not syntax.
compile_time_constant10_test/02: Fail # Not syntax.
compile_time_constant13_test/02: Fail # Not syntax.
compile_time_constant13_test/03: Fail # Not syntax.
compile_time_constant13_test/04: Fail # Not syntax.
compile_time_constant13_test/05: Fail # Not syntax.
compile_time_constant_arguments_test/*: Fail # Not syntax.
compile_time_constant_arguments_test/none: Pass
compile_time_constant_c_test/02: Fail # Not syntax.
compile_time_constant_c_test/03: Fail # Not syntax.
compile_time_constant_k_test/01: Fail # Not syntax.
compile_time_constant_k_test/02: Fail # Not syntax.
compile_time_constant_k_test/03: Fail # Not syntax.
const_switch2_test/01: Fail # Not syntax.
const_syntax_test/01: Fail # Dart.g and the spec do not make it an error to omit the initializer on a local const.
const_syntax_test/02: Fail # Dart.g and the spec do not make it an error to omit the initializer on a local const.
const_syntax_test/05: Fail # Not syntax.
const_syntax_test/06: Fail # Not syntax.
const_syntax_test/07: Fail # Not syntax.
const_syntax_test/08: Fail # Not syntax.
const_syntax_test/09: Fail # Not syntax.
const_syntax_test/10: Fail # Not syntax.
const_syntax_test/11: Fail # Not syntax.
const_syntax_test/12: Fail # Not syntax.
const_types_test: Fail # Not syntax.
constant_locals_test/01: Fail # Dart.g does not make it a syntax error to omit the initializer on a local const (the spec doesn't either).
constant_locals_test/02: Fail # Not syntax.
constant_locals_test/03: Fail # Not syntax.
constant_locals_test/04: Fail # Not syntax.
constant_locals_test/05: Fail # Not syntax.
constant_type_literal_test/01: Fail # Not syntax.
constants_test/03: Fail # Not syntax.
constants_test/04: Fail # Not syntax.
constants_test/05: Fail # Not syntax.
constructor10_test/00: Fail # Not syntax.
constructor10_test/01: Fail # Not syntax.
constructor10_test/02: Fail # Not syntax.
constructor_call_as_function_test/01: Fail # Not syntax (and will be OK, with optional new/const).
constructor_duplicate_final_test/01: Fail # Not syntax.
constructor_duplicate_final_test/02: Fail # Not syntax.
constructor_duplicate_final_test/03: Fail # Not syntax.
constructor_duplicate_initializers_test/01: Fail # Not syntax.
constructor_duplicate_initializers_test/02: Fail # Not syntax.
constructor_duplicate_initializers_test/03: Fail # Not syntax.
constructor_name_test/01: Fail # Not syntax.
constructor_named_arguments_test/01: Fail # Not syntax.
constructor_redirect2_test/03: Fail # Dart.g does not make it an error to have an initializing formal parameter in a redirecting construct (same in spec).
constructor_redirect_test/01: Fail # Not syntax.
constructor_return_test/01: Fail # Not syntax.
constructor_return_test/02: Fail # Not syntax.
constructor_return_test/03: Fail # Dart.g and the spec do not make it an error to use `=>` with a constructor, even though it can't return.
constructor_return_test/04: Fail # Not syntax.
constructor_return_test/05: Fail # Dart.g and the spec do not make it an error to use `=>` with a constructor, even though it can't return.
covariant_test/02: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: top-level setter).
covariant_test/08: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: top-level setter).
covariant_test/12: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: top-level method).
covariant_test/14: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: top-level method).
covariant_test/16: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: top-level method).
covariant_test/22: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: static setter).
covariant_test/28: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: static setter).
covariant_test/32: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: static method).
covariant_test/34: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: static method).
covariant_test/36: Fail # Dart.g does not make it a syntax error to use `covariant` on any parameter (here: static method).
crash_6725_test/01: Fail # Not syntax.
create_unresolved_type_test/01: Fail # Not syntax.
cyclic_class_member_test/01: Fail # Not syntax.
cyclic_constructor_test/01: Fail # Not syntax.
cyclic_type_variable_test/*: Fail # Not syntax.
cyclic_type_variable_test/none: Pass
cyclic_typedef_test/01: Fail # Not syntax.
cyclic_typedef_test/02: Fail # Not syntax.
cyclic_typedef_test/03: Fail # Not syntax.
cyclic_typedef_test/04: Fail # Not syntax.
cyclic_typedef_test/05: Fail # Not syntax.
cyclic_typedef_test/06: Fail # Not syntax.
cyclic_typedef_test/07: Fail # Not syntax.
cyclic_typedef_test/08: Fail # Not syntax.
cyclic_typedef_test/09: Fail # Not syntax.
cyclic_typedef_test/10: Fail # Not syntax.
cyclic_typedef_test/11: Fail # Not syntax.
cyclic_typedef_test/13: Fail # Not syntax.
default_factory2_test/01: Fail # Not syntax.
default_factory_test/01: Fail # Not syntax.
deferred_constraints_constants_test/constructor1: Fail # Not syntax.
deferred_constraints_constants_test/constructor2: Fail # Not syntax.
deferred_constraints_constants_test/default_argument1: Fail # Not syntax.
deferred_constraints_constants_test/default_argument2: Fail # Not syntax.
deferred_constraints_constants_test/metadata1: Fail # Not syntax.
deferred_constraints_constants_test/metadata3: Fail # Not syntax.
deferred_constraints_constants_test/reference1: Fail # Not syntax.
deferred_constraints_constants_test/reference2: Fail # Not syntax.
deferred_constraints_type_annotation_test/as_operation: Fail # Not syntax.
deferred_constraints_type_annotation_test/catch_check: Fail # Not syntax.
deferred_constraints_type_annotation_test/is_check: Fail # Not syntax.
deferred_constraints_type_annotation_test/new_before_load: Fail # Not syntax.
deferred_constraints_type_annotation_test/new_generic2: Fail # Not syntax.
deferred_constraints_type_annotation_test/new_generic3: Fail # Not syntax.
deferred_constraints_type_annotation_test/type_annotation1: Fail # Not syntax.
deferred_constraints_type_annotation_test/type_annotation_generic1: Fail # Not syntax.
deferred_constraints_type_annotation_test/type_annotation_generic2: Fail # Not syntax.
deferred_constraints_type_annotation_test/type_annotation_generic3: Fail # Not syntax.
deferred_constraints_type_annotation_test/type_annotation_generic4: Fail # Not syntax.
deferred_constraints_type_annotation_test/type_annotation_null: Fail # Not syntax.
deferred_constraints_type_annotation_test/type_annotation_top_level: Fail # Not syntax.
deferred_duplicate_prefix1_test/01: Fail # Not syntax.
deferred_duplicate_prefix2_test/01: Fail # Not syntax.
deferred_duplicate_prefix3_test/01: Fail # Not syntax.
deferred_inheritance_constraints_test/extends: Fail # Not syntax.
deferred_inheritance_constraints_test/implements: Fail # Not syntax.
deferred_inheritance_constraints_test/mixin: Fail # Not syntax.
deferred_inheritance_constraints_test/redirecting_constructor: Fail # Not syntax.
deferred_load_constants_test/*: Fail # Not syntax.
deferred_load_constants_test/none: Pass
deferred_super_dependency_test/01: Fail # Not syntax.
double_to_string_as_exponential2_test/01: Fail # Not syntax.
double_to_string_as_exponential2_test/02: Fail # Not syntax.
double_to_string_as_exponential2_test/03: Fail # Not syntax.
double_to_string_as_fixed2_test/01: Fail # Not syntax.
double_to_string_as_fixed2_test/02: Fail # Not syntax.
double_to_string_as_fixed2_test/03: Fail # Not syntax.
double_to_string_as_precision2_test/01: Fail # Not syntax.
double_to_string_as_precision2_test/02: Fail # Not syntax.
double_to_string_as_precision2_test/03: Fail # Not syntax.
duplicate_constructor_test/01: Fail # Not syntax.
duplicate_implements_test/01: Fail # Not syntax.
duplicate_implements_test/02: Fail # Not syntax.
duplicate_implements_test/03: Fail # Not syntax.
duplicate_implements_test/04: Fail # Not syntax.
dynamic2_test/00: Fail # Not syntax.
dynamic2_test/01: Fail # Not syntax.
dynamic_field_test/01: Fail # Not syntax.
dynamic_field_test/02: Fail # Not syntax.
dynamic_prefix_core_test/01: Fail # Not syntax.
empty_block_case_test: Fail # Not syntax (it's about fall-through).
enum_private_test/02: Fail # Not syntax.
enum_syntax_test/02: Fail # Not syntax.
enum_syntax_test/03: Fail # Not syntax.
enum_syntax_test/04: Fail # Not syntax.
enum_syntax_test/05: Fail # Not syntax.
enum_syntax_test/06: Fail # Not syntax.
enum_syntax_test/09: Fail # Not syntax.
enum_syntax_test/10: Fail # Not syntax.
enum_syntax_test/11: Fail # Not syntax.
enum_syntax_test/20: Fail # Not syntax.
enum_syntax_test/21: Fail # Not syntax.
enum_syntax_test/22: Fail # Not syntax.
enum_syntax_test/30: Fail # Not syntax.
error_stacktrace_test/00: Fail # Not syntax.
export_ambiguous_main_test: Fail # Not syntax.
export_private_test/01: Fail # Not syntax.
extend_type_parameter_test/00: Fail # Not syntax.
extend_type_parameter_test/01: Fail # Not syntax.
external_test/10: Fail # Not syntax.
external_test/13: Fail # Not syntax (but it could be).
external_test/20: Fail # Not syntax.
external_test/21: Fail # Not syntax.
external_test/24: Fail # Not syntax.
f_bounded_quantification_test/01: Fail # Not syntax.
f_bounded_quantification_test/02: Fail # Not syntax.
factory1_test/00: Fail # Not syntax.
factory1_test/01: Fail # Not syntax.
factory2_test/01: Fail # Not syntax.
factory2_test/03: Fail # Not syntax.
factory2_test/none: Fail # Not syntax (test mixes multi-test and /*@..*/).
factory3_test/01: Fail # Not syntax.
factory3_test/none: Fail # Not syntax (test mixes multi-test and /*@..*/).
factory4_test/00: Fail # Not syntax.
factory5_test/00: Fail # Not syntax.
factory6_test/00: Fail # Not syntax.
factory_redirection3_cyclic_test/01: Fail # Not syntax.
factory_redirection_test/01: Fail # Not syntax.
factory_redirection_test/02: Fail # Not syntax.
factory_redirection_test/03: Fail # Not syntax.
factory_redirection_test/04: Fail # Not syntax.
factory_redirection_test/05: Fail # Not syntax.
factory_redirection_test/06: Fail # Not syntax.
factory_redirection_test/07: Fail # Not syntax.
factory_redirection_test/08: Fail # Not syntax.
factory_redirection_test/09: Fail # Not syntax.
factory_redirection_test/10: Fail # Not syntax.
factory_redirection_test/11: Fail # Not syntax.
factory_redirection_test/12: Fail # Not syntax.
factory_redirection_test/13: Fail # Not syntax.
factory_redirection_test/14: Fail # Not syntax.
factory_redirection_test/none: Fail # Not syntax?
factory_return_type_checked_test/00: Fail # Not syntax.
factory_test/00: Fail # Not syntax.
fauxverride_test/03: Fail # Not syntax.
fauxverride_test/05: Fail # Not syntax.
field1_test: Fail # Not syntax.
field2_test: Fail # Not syntax.
field3_test/01: Fail # Not syntax.
field4_test: Fail # Not syntax.
field5_test: Fail # Not syntax.
field6_test/00: Fail # Not syntax.
field6_test/01: Fail # Not syntax.
field_initialization_order_test/01: Fail # Not syntax.
field_method4_test: Fail # Not syntax.
for_in3_test: Fail # Not syntax.
generic_constructor_mixin2_test/01: Fail # Not syntax.
generic_constructor_mixin3_test/01: Fail # Not syntax.
generic_constructor_mixin_test/01: Fail # Not syntax.
generic_field_mixin6_test/01: Fail # Not syntax.
generic_function_type_as_type_argument_test/01: Fail # Not syntax.
generic_function_type_as_type_argument_test/02: Fail # Not syntax.
generic_function_typedef2_test/04: Fail # Not syntax.
generic_function_typedef2_test/05: Fail # Not syntax.
generic_function_typedef2_test/06: Fail # Not syntax.
generic_metadata_test/02: Fail # Dart.g already allows metadata with type arguments (expected to be added to spec).
generic_metadata_test/03: Fail # Dart.g already allows metadata with type arguments (expected to be added to spec).
generic_methods_bounds_test/01: Fail # Not syntax.
generic_methods_dynamic_test/01: Fail # Not syntax.
generic_methods_dynamic_test/03: Fail # Not syntax.
generic_methods_generic_function_result_test/01: Fail # Not syntax.
generic_methods_overriding_test/01: Fail # Not syntax.
generic_methods_overriding_test/03: Fail # Not syntax.
generic_methods_recursive_bound_test/02: Fail # Not syntax.
getter_no_setter2_test/*: Fail # Not syntax.
getter_no_setter2_test/none: Pass
getter_no_setter_test/*: Fail # Not syntax.
getter_no_setter_test/none: Pass
getter_override2_test/02: Fail # Not syntax.
getter_override_test/*: Fail # Not syntax.
getter_override_test/none: Pass
getters_setters2_test/02: Fail # Not syntax.
identical_const_test/01: Fail # Not syntax.
identical_const_test/02: Fail # Not syntax.
identical_const_test/03: Fail # Not syntax.
identical_const_test/04: Fail # Not syntax.
if_null_assignment_behavior_test/03: Fail # Not syntax.
if_null_assignment_behavior_test/13: Fail # Not syntax.
if_null_assignment_behavior_test/15: Fail # Not syntax.
if_null_assignment_behavior_test/29: Fail # Not syntax.
if_null_assignment_behavior_test/30: Fail # Not syntax.
if_null_assignment_static_test/02: Fail # Not syntax.
if_null_assignment_static_test/04: Fail # Not syntax.
if_null_assignment_static_test/06: Fail # Not syntax.
if_null_assignment_static_test/07: Fail # Not syntax.
if_null_assignment_static_test/09: Fail # Not syntax.
if_null_assignment_static_test/11: Fail # Not syntax.
if_null_assignment_static_test/13: Fail # Not syntax.
if_null_assignment_static_test/14: Fail # Not syntax.
if_null_assignment_static_test/16: Fail # Not syntax.
if_null_assignment_static_test/18: Fail # Not syntax.
if_null_assignment_static_test/20: Fail # Not syntax.
if_null_assignment_static_test/21: Fail # Not syntax.
if_null_assignment_static_test/23: Fail # Not syntax.
if_null_assignment_static_test/25: Fail # Not syntax.
if_null_assignment_static_test/27: Fail # Not syntax.
if_null_assignment_static_test/28: Fail # Not syntax.
if_null_assignment_static_test/30: Fail # Not syntax.
if_null_assignment_static_test/32: Fail # Not syntax.
if_null_assignment_static_test/34: Fail # Not syntax.
if_null_assignment_static_test/35: Fail # Not syntax.
if_null_assignment_static_test/37: Fail # Not syntax.
if_null_assignment_static_test/39: Fail # Not syntax.
if_null_assignment_static_test/41: Fail # Not syntax.
if_null_assignment_static_test/42: Fail # Not syntax.
if_null_precedence_test/06: Fail # Not syntax.
if_null_precedence_test/07: Fail # Not syntax.
illegal_invocation_test/01: Fail # Not syntax.
implicit_this_test/01: Fail # Not syntax.
implicit_this_test/02: Fail # Not syntax.
implicit_this_test/04: Fail # Not syntax.
import_private_test/01: Fail # Not syntax.
import_self_test/01: Fail # Not syntax.
inferrer_constructor5_test/01: Fail # Not syntax.
initializing_formal_final_test: Fail # Not syntax.
initializing_formal_type_annotation_test/01: Fail # Not syntax.
initializing_formal_type_annotation_test/02: Fail # Not syntax.
initializing_formal_type_test: Fail # Not syntax.
interface_cycle_test/01: Fail # Not syntax.
interface_cycle_test/02: Fail # Not syntax.
interface_test/00: Fail # Not syntax.
internal_library_test/01: Fail # Not syntax.
internal_library_test/02: Fail # Not syntax.
is_malformed_type_test/*: Fail # Not syntax.
is_malformed_type_test/none: Pass
is_not_class2_test/01: Fail # Not syntax.
isnot_malformed_type_test/01: Fail # Not syntax.
issue11724_test/01: Fail # Not syntax.
issue1363_test/01: Fail # Not syntax.
issue15606_test/01: Fail # Not syntax.
issue18628_1_test/01: Fail # Not syntax.
issue18628_2_test/01: Fail # Not syntax.
least_upper_bound_expansive_test/*: Fail # Not syntax.
least_upper_bound_expansive_test/none: Pass
least_upper_bound_test/03: Fail # Not syntax.
least_upper_bound_test/04: Fail # Not syntax.
least_upper_bound_test/10: Fail # Not syntax.
least_upper_bound_test/19: Fail # Not syntax.
least_upper_bound_test/20: Fail # Not syntax.
least_upper_bound_test/23: Fail # Not syntax.
least_upper_bound_test/24: Fail # Not syntax.
least_upper_bound_test/29: Fail # Not syntax.
least_upper_bound_test/30: Fail # Not syntax.
least_upper_bound_test/32: Fail # Not syntax.
library_ambiguous_test/*: Fail # Not syntax.
library_ambiguous_test/none: Pass
list_literal1_test/01: Fail # Not syntax.
list_literal4_test/00: Fail # Not syntax.
list_literal4_test/01: Fail # Not syntax.
list_literal4_test/03: Fail # Not syntax.
list_literal4_test/04: Fail # Not syntax.
list_literal4_test/05: Fail # Not syntax.
list_literal_syntax_test/01: Fail # Not syntax.
list_literal_syntax_test/02: Fail # Not syntax.
list_literal_syntax_test/03: Fail # Not syntax.
map_literal1_test/01: Fail # Not syntax.
map_literal3_test/01: Fail # Not syntax.
map_literal3_test/02: Fail # Not syntax.
map_literal3_test/03: Fail # Not syntax.
map_literal3_test/04: Fail # Not syntax.
map_literal4_test/*: Fail # Not syntax.
map_literal4_test/none: Pass
method_override2_test/*: Fail # Not syntax.
method_override2_test/none: Pass
method_override3_test/*: Fail # Not syntax.
method_override3_test/none: Pass
method_override7_test/*: Fail # Not syntax.
method_override7_test/none: Pass
method_override8_test/00: Fail # Not syntax.
method_override8_test/01: Fail # Not syntax.
method_override8_test/03: Fail # Not syntax.
mixin_of_mixin_test/*: Fail # Not syntax.
mixin_of_mixin_test/none: Pass
mixin_super_2_test/*: Fail # Not syntax.
mixin_super_2_test/none: Pass
mixin_super_bound_test/01: Fail # Not syntax.
mixin_super_bound_test/02: Fail # Not syntax.
mixin_super_constructor_named_test/01: Fail # Not syntax.
mixin_super_constructor_positionals_test/01: Fail # Not syntax.
mixin_supertype_subclass_test/02: Fail # Not syntax.
mixin_supertype_subclass_test/05: Fail # Not syntax.
mixin_type_parameters_errors_test/*: Fail # Not syntax.
mixin_type_parameters_errors_test/none: Pass
mixin_with_two_implicit_constructors_test: Fail # Not syntax.
multiline_newline_test/04: Fail # Not syntax.
multiline_newline_test/04r: Fail # Not syntax.
multiline_newline_test/05: Fail # Not syntax.
multiline_newline_test/05r: Fail # Not syntax.
multiline_newline_test/06: Fail # Not syntax.
multiline_newline_test/06r: Fail # Not syntax.
named_constructor_test/01: Fail # Not syntax (think `new prefix.id<int>()`).
named_constructor_test/03: Fail # Not syntax (think `new C<int>.id()`).
named_parameters2_test: Fail # Not syntax.
named_parameters3_test: Fail # Not syntax.
named_parameters4_test: Fail # Not syntax.
named_parameters_aggregated_test/01: Fail # Dart.g does not make it a syntax error to have a default value on an optional positional parameter in an old-style typedef.
named_parameters_aggregated_test/03: Fail # Dart.g does not make it a syntax error to have a default value on an optional named parameter in an old-style function typed parameter.
named_parameters_aggregated_test/04: Fail # Not syntax.
named_parameters_aggregated_test/05: Fail # Not syntax.
named_parameters_aggregated_test/06: Fail # Not syntax.
named_parameters_default_eq_test/01: Fail # Dart.g does not make it a syntax error to have a default value on an optional positional parameter in an old-style typedef.
named_parameters_default_eq_test/02: Fail # Not syntax.
named_parameters_test/*: Fail # Not syntax.
named_parameters_test/none: Pass
named_parameters_type_test/*: Fail # Not syntax.
named_parameters_type_test/none: Pass
new_expression_type_args_test/*: Fail # Not syntax.
new_expression_type_args_test/none: Pass
new_prefix_test/01: Fail # Not syntax.
no_such_constructor_test/01: Fail # Not syntax.
not_enough_positional_arguments_test/*: Fail # Not syntax.
not_enough_positional_arguments_test/none: Pass
null_test/01: Fail # Not syntax.
null_test/02: Fail # Not syntax.
null_test/03: Fail # Not syntax.
number_identifier_test/05: Fail # Not syntax.
number_identifier_test/08: Fail # Not syntax.
number_identifier_test/09: Fail # Not syntax.
on_catch_malformed_type_test: Fail # Not syntax.
operator5_test: Fail # Not syntax.
operator_equals_test: Fail # Not syntax.
optimized_constant_array_string_access_test: Fail # Not syntax.
optional_named_parameters_test/*: Fail # Not syntax.
optional_named_parameters_test/none: Pass
override_field_test/*: Fail # Not syntax.
override_field_test/none: Pass
override_inheritance_abstract_test/02: Fail # Not syntax.
override_inheritance_abstract_test/03: Fail # Not syntax.
override_inheritance_abstract_test/04: Fail # Not syntax.
override_inheritance_abstract_test/08: Fail # Not syntax.
override_inheritance_abstract_test/09: Fail # Not syntax.
override_inheritance_abstract_test/10: Fail # Not syntax.
override_inheritance_abstract_test/11: Fail # Not syntax.
override_inheritance_abstract_test/12: Fail # Not syntax.
override_inheritance_abstract_test/13: Fail # Not syntax..
override_inheritance_abstract_test/14: Fail # Not syntax.
override_inheritance_abstract_test/17: Fail # Not syntax.
override_inheritance_abstract_test/19: Fail # Not syntax.
override_inheritance_abstract_test/20: Fail # Not syntax.
override_inheritance_abstract_test/21: Fail # Not syntax.
override_inheritance_abstract_test/22: Fail # Not syntax.
override_inheritance_abstract_test/23: Fail # Not syntax.
override_inheritance_abstract_test/24: Fail # Not syntax.
override_inheritance_abstract_test/25: Fail # Not syntax.
override_inheritance_abstract_test/26: Fail # Not syntax.
override_inheritance_abstract_test/28: Fail # Not syntax.
override_inheritance_field_test/05: Fail # Not syntax.
override_inheritance_field_test/07: Fail # Not syntax.
override_inheritance_field_test/08: Fail # Not syntax.
override_inheritance_field_test/09: Fail # Not syntax.
override_inheritance_field_test/10: Fail # Not syntax.
override_inheritance_field_test/11: Fail # Not syntax.
override_inheritance_field_test/28: Fail # Not syntax.
override_inheritance_field_test/30: Fail # Not syntax.
override_inheritance_field_test/31: Fail # Not syntax.
override_inheritance_field_test/32: Fail # Not syntax.
override_inheritance_field_test/33: Fail # Not syntax.
override_inheritance_field_test/33a: Fail # Not syntax.
override_inheritance_field_test/34: Fail # Not syntax.
override_inheritance_field_test/44: Fail # Not syntax.
override_inheritance_field_test/47: Fail # Not syntax.
override_inheritance_field_test/48: Fail # Not syntax.
override_inheritance_field_test/53: Fail # Not syntax.
override_inheritance_field_test/54: Fail # Not syntax.
override_inheritance_generic_test/04: Fail # Not syntax.
override_inheritance_generic_test/06: Fail # Not syntax.
override_inheritance_generic_test/07: Fail # Not syntax.
override_inheritance_generic_test/08: Fail # Not syntax.
override_inheritance_generic_test/09: Fail # Not syntax.
override_inheritance_generic_test/10: Fail # Not syntax.
override_inheritance_method_test/04: Fail # Not syntax.
override_inheritance_method_test/05: Fail # Not syntax.
override_inheritance_method_test/06: Fail # Not syntax.
override_inheritance_method_test/11: Fail # Not syntax.
override_inheritance_method_test/12: Fail # Not syntax.
override_inheritance_method_test/13: Fail # Not syntax.
override_inheritance_method_test/14: Fail # Not syntax.
override_inheritance_method_test/19: Fail # Not syntax.
override_inheritance_method_test/20: Fail # Not syntax.
override_inheritance_method_test/21: Fail # Not syntax.
override_inheritance_method_test/27: Fail # Not syntax.
override_inheritance_method_test/30: Fail # Not syntax.
override_inheritance_method_test/31: Fail # Not syntax.
override_inheritance_method_test/32: Fail # Not syntax.
override_inheritance_method_test/33: Fail # Not syntax.
override_inheritance_mixed_test/01: Fail # Not syntax.
override_inheritance_mixed_test/02: Fail # Not syntax.
override_inheritance_mixed_test/03: Fail # Not syntax.
override_inheritance_mixed_test/04: Fail # Not syntax.
override_inheritance_mixed_test/06: Fail # Not syntax.
override_inheritance_mixed_test/07: Fail # Not syntax.
override_inheritance_mixed_test/08: Fail # Not syntax.
override_inheritance_mixed_test/09: Fail # Not syntax.
override_inheritance_no_such_method_test/01: Fail # Not syntax.
override_inheritance_no_such_method_test/02: Fail # Not syntax.
override_inheritance_no_such_method_test/06: Fail # Not syntax.
override_inheritance_no_such_method_test/07: Fail # Not syntax.
override_inheritance_no_such_method_test/09: Fail # Not syntax.
override_inheritance_no_such_method_test/10: Fail # Not syntax.
override_inheritance_no_such_method_test/12: Fail # Not syntax.
override_inheritance_no_such_method_test/13: Fail # Not syntax (but it will be OK in the future, and we will then be able to remove this status entry).
override_method_with_field_test/01: Fail # Not syntax.
override_method_with_field_test/02: Fail # Not syntax.
part2_test/01: Fail # Not syntax.
part_refers_to_core_library_test/01: Fail # Not syntax.
positional_parameters_type_test/01: Fail # Not syntax.
positional_parameters_type_test/02: Fail # Not syntax.
prefix16_test/00: Fail # Not syntax.
prefix16_test/01: Fail # Not syntax.
prefix22_test/00: Fail # Not syntax.
prefix23_test/00: Fail # Not syntax.
prefix_assignment_test/01: Fail # Not syntax.
prefix_assignment_test/02: Fail # Not syntax.
prefix_identifier_reference_test/*: Fail # Not syntax.
prefix_identifier_reference_test/none: Pass
prefix_unqualified_invocation_test/01: Fail # Not syntax.
prefix_unqualified_invocation_test/02: Fail # Not syntax.
private_access_test/*: Fail # Not syntax.
private_access_test/none: Pass
regress_22936_test: Fail # Not syntax.
regress_23038_test/01: Fail # Not syntax.
regress_23089_test: Fail # Not syntax.
regress_26133_test: Fail # Not syntax.
regress_26855_test/0: Fail # Not syntax (misplaced initializing formal).
regress_26855_test/1: Fail # Not syntax (misplaced initializing formal).
regress_26855_test/2: Fail # Not syntax (misplaced initializing formal).
regress_26855_test/3: Fail # Not syntax (misplaced initializing formal).
regress_26855_test/4: Fail # Not syntax (misplaced initializing formal).
regress_27572_test: Fail # Not syntax.
regress_27617_test/1: Fail # Not syntax.
regress_28217_test/01: Fail # Not syntax.
regress_28217_test/none: Fail # Not syntax.
regress_29784_test/*: Fail # Not syntax.
regress_29784_test/none: Pass
scope_variable_test/01: Fail # Not syntax.
static_field3_test/*: Fail # Not syntax.
static_field3_test/none: Pass
static_field_test/*: Fail # Not syntax.
static_field_test/none: Pass
static_final_field2_test/01: Fail # Not syntax.
static_getter_no_setter1_test/01: Fail # Not syntax.
static_getter_no_setter2_test/01: Fail # Not syntax.
static_initializer_type_error_test: Fail # Not syntax.
static_setter_get_test/01: Fail # Not syntax.
string_interpolation_test/01: Fail # Not syntax.
string_no_operator_test/*: Fail # Not syntax.
string_no_operator_test/none: Pass
string_test/01: Fail # Not syntax.
substring_test/01: Fail # Not syntax.
super_assign_test/01: Fail # Not syntax.
super_bound_closure_test/01: Fail # Not syntax.
try_catch_on_syntax_test/07: Fail # Not syntax.
try_catch_on_syntax_test/10: Fail # Not syntax.
try_catch_on_syntax_test/11: Fail # Not syntax.
try_catch_syntax_test/05: Fail # Not syntax.
try_catch_syntax_test/08: Fail # Not syntax.
try_catch_syntax_test/16: Fail # Not syntax.
try_catch_syntax_test/17: Fail # Not syntax.
try_catch_test/01: Fail # Not syntax.
type_check_const_function_typedef2_test: Fail # Not syntax.
type_checks_in_factory_method_test/01: Fail # Not syntax.
type_literal_prefix_call_test/00: Fail # Not syntax (will be legal with optional new/const).
type_parameter_test/*: Fail # Not syntax.
type_parameter_test/none: Pass
type_promotion_assign_test/*: Fail # Not syntax.
type_promotion_assign_test/none: Pass
type_promotion_closure_test/01: Fail # Not syntax.
type_promotion_closure_test/02: Fail # Not syntax.
type_promotion_closure_test/03: Fail # Not syntax.
type_promotion_closure_test/04: Fail # Not syntax.
type_promotion_closure_test/06: Fail # Not syntax.
type_promotion_closure_test/07: Fail # Not syntax.
type_promotion_closure_test/09: Fail # Not syntax.
type_promotion_closure_test/10: Fail # Not syntax.
type_promotion_closure_test/11: Fail # Not syntax.
type_promotion_closure_test/12: Fail # Not syntax.
type_promotion_closure_test/13: Fail # Not syntax.
type_promotion_closure_test/14: Fail # Not syntax.
type_promotion_closure_test/15: Fail # Not syntax.
type_promotion_closure_test/16: Fail # Not syntax.
type_promotion_local_test/*: Fail # Not syntax.
type_promotion_local_test/none: Pass
type_promotion_logical_and_test/*: Fail # Not syntax.
type_promotion_logical_and_test/none: Pass
type_promotion_more_specific_test/02: Fail # Not syntax.
type_promotion_more_specific_test/06: Fail # Not syntax.
type_promotion_more_specific_test/07: Fail # Not syntax.
type_promotion_more_specific_test/09: Fail # Not syntax.
type_promotion_multiple_test/*: Fail # Not syntax.
type_promotion_multiple_test/none: Pass
type_promotion_parameter_test/*: Fail # Not syntax.
type_promotion_parameter_test/none: Pass
type_variable_bounds2_test: Fail # Not syntax.
type_variable_bounds3_test/00: Fail # Not syntax.
type_variable_bounds4_test/01: Fail # Not syntax.
type_variable_bounds_test/*: Fail # Not syntax.
type_variable_bounds_test/none: Pass
type_variable_conflict2_test/*: Fail # Not syntax.
type_variable_conflict2_test/none: Pass
type_variable_conflict_test/*: Fail # Not syntax.
type_variable_conflict_test/none: Pass
type_variable_identifier_expression_test: Fail # Not syntax.
type_variable_scope2_test: Fail # Not syntax.
type_variable_scope3_test/00: Fail # Not syntax.
type_variable_scope_test/*: Fail # Not syntax.
type_variable_scope_test/none: Pass
type_variable_static_context_test: Fail # Not syntax.
typed_selector2_test: Fail # Not syntax.
unbound_getter_test: Fail # Not syntax.
unresolved_default_constructor_test/01: Fail # Not syntax.
unresolved_in_factory_test: Fail # Not syntax.
unresolved_top_level_method_test: Fail # Not syntax.
unresolved_top_level_var_test: Fail # Not syntax.
vm/type_vm_test/*: Fail # Not syntax.
vm/type_vm_test/none: Pass
void_block_return_test/00: Fail # Not syntax.
wrong_number_type_arguments_test/*: Fail # Not syntax.
wrong_number_type_arguments_test/none: Pass

# Tests using assert in initializer list.
assertion_initializer_test: Skip # Not yet supported.
assertion_initializer_const_error_test: Skip # Not yet supported.
assertion_initializer_const_error2_test: Skip # Not yet supported.
assertion_initializer_const_function_test: Skip # Not yet supported.
assertion_initializer_const_function_error_test: Skip # Not yet supported.

# Tests using debug break (which is not Dart syntax).
vm/debug_break_enabled_vm_test/01: Fail # Uses debug break.
vm/debug_break_enabled_vm_test/none: Fail # Uses debug break.

# Tests using generalized void.
void_type_function_types_test: Skip # Not yet supported.

# Tests that fail because of the deep nesting.
deep_nesting1_negative_test: Skip # Stack overflow.
deep_nesting2_negative_test: Skip # Stack overflow.
issue_1751477_test: Skip # Times out: 9 levels, exponential blowup => 430 secs.

# Tests that succeed, but are marked as failing elsewhere.
closure_type_test: Pass # Marked as RuntimeError for all in language_2.status.

# Looks like the test should be changed.
arg_param_trailing_comma_test/107: Fail # `void operator []=(a,);` expected to be a compile-time error
