// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// WARNING: Do not edit - generated code.

part of $LIBRARYNAME;

$(ANNOTATIONS)$(NATIVESPEC)$(CLASS_MODIFIERS)class $CLASSNAME$EXTENDS$IMPLEMENTS {
$if DART2JS
  factory $CLASSNAME(String type, [Map eventInitDict]) {
    if (eventInitDict == null) {
      eventInitDict = [];
    }
    var touches = eventInitDict.containsKey('touches') ? eventInitDict['touches'] : [];
    var targetTouches = eventInitDict.containsKey('targetTouches') ? eventInitDict['targetTouches'] : []; 
    var changedTouches = eventInitDict.containsKey('changedTouches') ? eventInitDict['changedTouches'] : []; 
    var view = eventInitDict.containsKey('view') ? eventInitDict['view'] : window;
    var screenX = eventInitDict.containsKey('screenX') ? eventInitDict['screenX']: 0;
    var screenY = eventInitDict.containsKey('screenY') ? eventInitDict['screenY']: 0;
    var clientX = eventInitDict.containsKey('clientX') ? eventInitDict['clientX']: 0;
    var clientY = eventInitDict.containsKey('clientY') ? eventInitDict['clientY']: 0;
    var ctrlKey = eventInitDict.containsKey('ctrlKey') ? eventInitDict['ctrlKey']: false;
    var altKey = eventInitDict.containsKey('altKey') ? eventInitDict['altKey']: false;
    var shiftKey = eventInitDict.containsKey('shiftKey') ? eventInitDict['shiftKey']: false;
    var metaKey = eventInitDict.containsKey('metaKey') ? eventInitDict['metaKey']: false;

    TouchEvent e = document._createEvent("TouchEvent");
    e._initTouchEvent(touches, targetTouches, changedTouches, type, view,
        screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey);
    return e;
  }
$else
  factory TouchEvent(String type, [Map eventInitDict]) {
    if (eventInitDict != null) {
      var eventInitDict_1 = convertDartToNative_Dictionary(eventInitDict);
      return _blink.BlinkTouchEvent.instance
          .constructorCallback_2_(type, eventInitDict_1);
    }
    return _blink.BlinkTouchEvent.instance.constructorCallback_1_(type);
  }
$endif
$!MEMBERS
  /**
   * Checks if touch events supported on the current platform.
   *
   * Note that touch events are only supported if the user is using a touch
   * device.
   */
  static bool get supported => Device.isEventTypeSupported('TouchEvent');
}
