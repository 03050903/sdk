library test;
import self as self;
import "dart:core" as core;

typedef Function2<S extends core::Object, T extends core::Object> = (S) → T;
static const field dynamic #errors = const <dynamic>["pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:15:9: Error: A value of type '(dart.core::String) \u8594 dart.core::String' can't be assigned to a variable of type '(dart.core::int) \u8594 dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to '(dart.core::int) \u8594 dart.core::String'.\n        l2 = /*error:INVALID_ASSIGNMENT*/ /*@returnType=String*/ (String x) =>\n        ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:18:9: Error: A value of type '(dart.core::int) \u8594 dart.core::int' can't be assigned to a variable of type '(dart.core::int) \u8594 dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to '(dart.core::int) \u8594 dart.core::String'.\n        l3 = /*error:INVALID_ASSIGNMENT*/ /*@returnType=int*/ (int x) => 3;\n        ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:20:7: Error: A value of type 'dart.core::int' can't be assigned to a variable of type 'dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::String'.\n      return /*error:RETURN_OF_INVALID_TYPE*/ 3;\n      ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:29:9: Error: A value of type '(dart.core::int) \u8594 dart.core::int' can't be assigned to a variable of type '(dart.core::int) \u8594 dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to '(dart.core::int) \u8594 dart.core::String'.\n        l2 = /*info:INFERRED_TYPE_CLOSURE, error:INVALID_ASSIGNMENT*/ /*@returnType=int*/ (/*@type=int*/ x) =>\n        ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:32:7: Error: A value of type 'dart.core::int' can't be assigned to a variable of type 'dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::String'.\n      return /*error:RETURN_OF_INVALID_TYPE*/ 3;\n      ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:35:7: Error: A value of type 'dart.core::int' can't be assigned to a variable of type 'dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::String'.\n      return /*error:RETURN_OF_INVALID_TYPE*/ x;\n      ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:44:9: Error: A value of type '(dart.core::String) \u8594 dart.core::List<dart.core::String>' can't be assigned to a variable of type '(dart.core::int) \u8594 dart.core::List<dart.core::String>'.\nTry changing the type of the left hand side, or casting the right hand side to '(dart.core::int) \u8594 dart.core::List<dart.core::String>'.\n        l2 = /*error:INVALID_ASSIGNMENT*/ /*@returnType=List<String>*/ (String\n        ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:48:58: Error: A value of type 'dart.core::int' can't be assigned to a variable of type 'dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::String'.\n              /*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ 3\n                                                         ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:52:52: Error: A value of type 'dart.core::int' can't be assigned to a variable of type 'dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::String'.\n        /*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ 3\n                                                   ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_expressions.dart:61:9: Error: A value of type '(dart.core::int) \u8594 dart.core::int' can't be assigned to a variable of type '(dart.core::int) \u8594 dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to '(dart.core::int) \u8594 dart.core::String'.\n        l2 = /*error:INVALID_ASSIGNMENT*/ /*@returnType=int*/ (/*@type=int*/ x) =>\n        ^"]/* from null */;
static method main() → void {
  {
    (core::int) → core::String l0 = (core::int x) → core::String => null;
    (core::int) → core::String l1 = (core::int x) → core::String => "hello";
    (core::int) → core::String l2 = ((core::String x) → core::String => "hello") as{TypeError} (core::int) → core::String;
    (core::int) → core::String l3 = ((core::int x) → core::int => 3) as{TypeError} (core::int) → core::String;
    (core::int) → core::String l4 = (core::int x) → core::String {
      return 3 as{TypeError} core::String;
    };
  }
  {
    (core::int) → core::String l0 = (core::int x) → core::String => null;
    (core::int) → core::String l1 = (core::int x) → core::String => "hello";
    (core::int) → core::String l2 = ((core::int x) → core::int => 3) as{TypeError} (core::int) → core::String;
    (core::int) → core::String l3 = (core::int x) → core::String {
      return 3 as{TypeError} core::String;
    };
    (core::int) → core::String l4 = (core::int x) → core::String {
      return x as{TypeError} core::String;
    };
  }
  {
    (core::int) → core::List<core::String> l0 = (core::int x) → core::List<core::String> => null;
    (core::int) → core::List<core::String> l1 = (core::int x) → core::List<core::String> => <core::String>["hello"];
    (core::int) → core::List<core::String> l2 = ((core::String x) → core::List<core::String> => <core::String>["hello"]) as{TypeError} (core::int) → core::List<core::String>;
    (core::int) → core::List<core::String> l3 = (core::int x) → core::List<core::String> => <core::String>[3 as{TypeError} core::String];
    (core::int) → core::List<core::String> l4 = (core::int x) → core::List<core::String> {
      return <core::String>[3 as{TypeError} core::String];
    };
  }
  {
    (core::int) → core::int l0 = (core::int x) → core::int => x;
    (core::int) → core::int l1 = (core::int x) → core::int => x.{core::num::+}(1);
    (core::int) → core::String l2 = ((core::int x) → core::int => x) as{TypeError} (core::int) → core::String;
    (core::int) → core::String l3 = (core::int x) → core::String => x.substring(3);
    (core::String) → core::String l4 = (core::String x) → core::String => x.{core::String::substring}(3);
  }
}
