library test;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  field core::int x = 2;
  default constructor •() → void
    : super core::Object::•()
    ;
}
static const field dynamic #errors = const <dynamic>["pkg/front_end/testcases/inference/propagate_inference_transitively.dart:14:24: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n  a1. /*@target=A::x*/ x = /*error:INVALID_ASSIGNMENT*/ \"hi\";\n                       ^", "pkg/front_end/testcases/inference/propagate_inference_transitively.dart:17:24: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n  a2. /*@target=A::x*/ x = /*error:INVALID_ASSIGNMENT*/ \"hi\";\n                       ^"]/* from null */;
static method test5() → dynamic {
  self::A a1 = new self::A::•();
  a1.{self::A::x} = "hi" as{TypeError} core::int;
  self::A a2 = new self::A::•();
  a2.{self::A::x} = "hi" as{TypeError} core::int;
}
static method main() → dynamic {}
