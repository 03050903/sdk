library test;
import self as self;
import "dart:core" as core;

static const field dynamic #errors = const <dynamic>["pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:16:68: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n  f0(/*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\"]);\n                                                                   ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:17:68: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n  f0(/*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\", 3]);\n                                                                   ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:21:71: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n  f1(a: /*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\"]);\n                                                                      ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:23:48: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n    /*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\",\n                                               ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:29:68: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n  f2(/*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\"]);\n                                                                   ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:30:68: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n  f2(/*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\", 3]);\n                                                                   ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:37:67: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n    /*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\"]\n                                                                  ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:40:67: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n    /*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\"],\n                                                                  ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:49:67: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n    /*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\"]\n                                                                  ^", "pkg/front_end/testcases/inference/downwards_inference_on_function_arguments_infer_downwards.dart:52:67: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n    /*@typeArgs=int*/ [/*error:LIST_ELEMENT_TYPE_NOT_ASSIGNABLE*/ \"hello\"],\n                                                                  ^"]/* from null */;
static method f0(core::List<core::int> a) → void {}
static method f1({core::List<core::int> a = null}) → void {}
static method f2(core::Iterable<core::int> a) → void {}
static method f3(core::Iterable<core::Iterable<core::int>> a) → void {}
static method f4({core::Iterable<core::Iterable<core::int>> a = null}) → void {}
static method test() → void {
  self::f0(<core::int>[]);
  self::f0(<core::int>[3]);
  self::f0(<core::int>["hello" as{TypeError} core::int]);
  self::f0(<core::int>["hello" as{TypeError} core::int, 3]);
  self::f1(a: <core::int>[]);
  self::f1(a: <core::int>[3]);
  self::f1(a: <core::int>["hello" as{TypeError} core::int]);
  self::f1(a: <core::int>["hello" as{TypeError} core::int, 3]);
  self::f2(<core::int>[]);
  self::f2(<core::int>[3]);
  self::f2(<core::int>["hello" as{TypeError} core::int]);
  self::f2(<core::int>["hello" as{TypeError} core::int, 3]);
  self::f3(<core::Iterable<core::int>>[]);
  self::f3(<core::Iterable<core::int>>[<core::int>[3]]);
  self::f3(<core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int]]);
  self::f3(<core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int], <core::int>[3]]);
  self::f4(a: <core::Iterable<core::int>>[]);
  self::f4(a: <core::Iterable<core::int>>[<core::int>[3]]);
  self::f4(a: <core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int]]);
  self::f4(a: <core::Iterable<core::int>>[<core::int>["hello" as{TypeError} core::int], <core::int>[3]]);
}
static method main() → dynamic {}
