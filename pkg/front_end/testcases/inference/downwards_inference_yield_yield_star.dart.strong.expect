library test;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;

abstract class MyStream<T extends core::Object> extends asy::Stream<self::MyStream::T> {
  static factory •<T extends core::Object>() → self::MyStream<self::MyStream::•::T>
    return null;
}
static const field dynamic #errors = const <dynamic>["pkg/front_end/testcases/inference/downwards_inference_yield_yield_star.dart:16:3: Error: A value of type 'test::MyStream<dynamic>' can't be assigned to a variable of type 'dart.core::List<dart.core::int>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::List<dart.core::int>'.\n  yield /*error:YIELD_OF_INVALID_TYPE*/ new /*@typeArgs=dynamic*/ MyStream();\n  ^", "pkg/front_end/testcases/inference/downwards_inference_yield_yield_star.dart:17:3: Error: A value of type 'dart.core::List<dynamic>' can't be assigned to a variable of type 'dart.async::Stream<dart.core::List<dart.core::int>>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.async::Stream<dart.core::List<dart.core::int>>'.\n  yield* /*error:YIELD_OF_INVALID_TYPE*/ /*@typeArgs=dynamic*/ [];\n  ^", "pkg/front_end/testcases/inference/downwards_inference_yield_yield_star.dart:23:3: Error: A value of type 'dart.core::List<dynamic>' can't be assigned to a variable of type 'dart.core::Map<dart.core::int, dart.core::int>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::Map<dart.core::int, dart.core::int>'.\n  yield /*error:YIELD_OF_INVALID_TYPE*/ new /*@typeArgs=dynamic*/ List();\n  ^", "pkg/front_end/testcases/inference/downwards_inference_yield_yield_star.dart:24:3: Error: A value of type 'dart.core::Map<dynamic, dynamic>' can't be assigned to a variable of type 'dart.core::Iterable<dart.core::Map<dart.core::int, dart.core::int>>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::Iterable<dart.core::Map<dart.core::int, dart.core::int>>'.\n  yield* /*error:YIELD_OF_INVALID_TYPE*/ /*@typeArgs=dynamic, dynamic*/ {};\n  ^"]/* from null */;
static method foo() → asy::Stream<core::List<core::int>> async* {
  yield<core::int>[];
  yield self::MyStream::•<dynamic>() as{TypeError} core::List<core::int>;
  yield*<dynamic>[] as{TypeError} asy::Stream<core::List<core::int>>;
  yield* self::MyStream::•<core::List<core::int>>();
}
static method bar() → core::Iterable<core::Map<core::int, core::int>> sync* {
  yield<core::int, core::int>{};
  yield core::List::_internal<dynamic>() as{TypeError} core::Map<core::int, core::int>;
  yield*<dynamic, dynamic>{} as{TypeError} core::Iterable<core::Map<core::int, core::int>>;
  yield* core::List::_internal<core::Map<core::int, core::int>>();
}
static method main() → dynamic {}
