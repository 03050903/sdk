library test;
import self as self;
import "dart:core" as core;

class Foo extends core::Object {
  field core::int bar = 42;
  default constructor •() → void
    : super core::Object::•()
    ;
}
class Bar<T extends core::Iterable<core::String>> extends core::Object {
  default constructor •() → void
    : super core::Object::•()
    ;
  method foo(generic-covariant-impl generic-covariant-interface self::Bar::T t) → void {
    for (core::String i in t) {
      core::int x = i as{TypeError} core::int;
    }
  }
}
class Baz<T extends core::Object, E extends core::Iterable<self::Baz::T>, S extends self::Baz::E> extends core::Object {
  default constructor •() → void
    : super core::Object::•()
    ;
  method foo(generic-covariant-impl generic-covariant-interface self::Baz::S t) → void {
    for (self::Baz::T i in t) {
      core::int x = i as{TypeError} core::int;
      self::Baz::T y = i;
    }
  }
}
static const field dynamic #errors = const <dynamic>["pkg/front_end/testcases/inference/infer_types_on_loop_indices_for_each_loop.dart:15:11: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n      int x = /*error:INVALID_ASSIGNMENT*/ i;\n          ^", "pkg/front_end/testcases/inference/infer_types_on_loop_indices_for_each_loop.dart:23:11: Error: A value of type 'test::Baz::T' can't be assigned to a variable of type 'dart.core::int'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::int'.\n      int x = /*error:INVALID_ASSIGNMENT*/ i;\n          ^", "pkg/front_end/testcases/inference/infer_types_on_loop_indices_for_each_loop.dart:32:12: Error: A value of type 'test::Foo' can't be assigned to a variable of type 'dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::String'.\n    String y = /*error:INVALID_ASSIGNMENT*/ x;\n           ^", "pkg/front_end/testcases/inference/infer_types_on_loop_indices_for_each_loop.dart:39:3: Error: A value of type 'test::Foo' can't be assigned to a variable of type 'dart.core::String'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::String'.\n  for (String x in /*error:FOR_IN_OF_INVALID_ELEMENT_TYPE*/ list) {\n  ^", "pkg/front_end/testcases/inference/infer_types_on_loop_indices_for_each_loop.dart:60:68: Error: A value of type 'dart.core::Map<dart.core::String, test::Foo>' can't be assigned to a variable of type 'dart.core::Iterable<dynamic>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::Iterable<dynamic>'.\n  for (var /*@type=dynamic*/ x in /*error:FOR_IN_OF_INVALID_TYPE*/ map) {\n                                                                   ^"]/* from null */;
static method test() → dynamic {
  core::List<self::Foo> list = <self::Foo>[];
  for (self::Foo x in list) {
    core::String y = x as{TypeError} core::String;
  }
  for (dynamic x in list) {
    core::String y = x as{TypeError} core::String;
  }
  for (final self::Foo #t1 in list) {
    core::String x = #t1 as{TypeError} core::String;
    core::String y = x;
  }
  dynamic z;
  for (final self::Foo #t2 in list) {
    z = #t2;
    core::String y = z as{TypeError} core::String;
  }
  core::Iterable<dynamic> iter = list;
  for (final dynamic #t3 in iter) {
    self::Foo x = #t3 as{TypeError} self::Foo;
    self::Foo y = x;
  }
  dynamic iter2 = list;
  for (final dynamic #t4 in iter2 as{TypeError} core::Iterable<dynamic>) {
    self::Foo x = #t4 as{TypeError} self::Foo;
    self::Foo y = x;
  }
  core::Map<core::String, self::Foo> map = <core::String, self::Foo>{};
  for (dynamic x in map as{TypeError} core::Iterable<dynamic>) {
    core::String y = x as{TypeError} core::String;
  }
  for (core::String x in map.{core::Map::keys}) {
    core::String y = x;
  }
}
static method main() → dynamic {}
