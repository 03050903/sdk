library test;
import self as self;
import "dart:core" as core;

class Test1 extends core::Object {
  field core::int prop = null;
  default constructor •() → void
    : super core::Object::•()
    ;
  static method test(self::Test1 t) → void {
    core::int v1 = let final self::Test1 #t1 = t in #t1.==(null) ?{core::int} null : #t1.{self::Test1::prop} = self::getInt();
    core::int v4 = let final self::Test1 #t2 = t in #t2.==(null) ?{core::int} null : let final core::int #t3 = #t2.{self::Test1::prop} in #t3.{core::num::==}(null) ?{core::int} #t2.{self::Test1::prop} = self::getInt() : #t3;
    core::int v7 = let final self::Test1 #t4 = t in #t4.==(null) ?{core::int} null : #t4.{self::Test1::prop} = #t4.{self::Test1::prop}.{core::num::+}(self::getInt());
    core::num v8 = let final self::Test1 #t5 = t in #t5.==(null) ?{core::num} null : #t5.{self::Test1::prop} = #t5.{self::Test1::prop}.{core::num::+}(self::getNum());
    core::int v10 = let final self::Test1 #t6 = t in #t6.==(null) ?{core::int} null : #t6.{self::Test1::prop} = #t6.{self::Test1::prop}.{core::num::+}(1);
    core::int v11 = let final self::Test1 #t7 = t in #t7.==(null) ?{core::int} null : let final core::int #t8 = #t7.{self::Test1::prop} in let final core::int #t9 = #t7.{self::Test1::prop} = #t8.{core::num::+}(1) in #t8;
  }
}
class Test2 extends core::Object {
  field core::num prop = null;
  default constructor •() → void
    : super core::Object::•()
    ;
  static method test(self::Test2 t) → void {
    core::int v1 = let final self::Test2 #t10 = t in #t10.==(null) ?{core::int} null : #t10.{self::Test2::prop} = self::getInt();
    core::num v2 = let final self::Test2 #t11 = t in #t11.==(null) ?{core::num} null : #t11.{self::Test2::prop} = self::getNum();
    core::double v3 = let final self::Test2 #t12 = t in #t12.==(null) ?{core::double} null : #t12.{self::Test2::prop} = self::getDouble();
    core::num v4 = let final self::Test2 #t13 = t in #t13.==(null) ?{core::num} null : let final core::num #t14 = #t13.{self::Test2::prop} in #t14.{core::num::==}(null) ?{core::num} #t13.{self::Test2::prop} = self::getInt() : #t14;
    core::num v5 = let final self::Test2 #t15 = t in #t15.==(null) ?{core::num} null : let final core::num #t16 = #t15.{self::Test2::prop} in #t16.{core::num::==}(null) ?{core::num} #t15.{self::Test2::prop} = self::getNum() : #t16;
    core::num v6 = let final self::Test2 #t17 = t in #t17.==(null) ?{core::num} null : let final core::num #t18 = #t17.{self::Test2::prop} in #t18.{core::num::==}(null) ?{core::num} #t17.{self::Test2::prop} = self::getDouble() : #t18;
    core::num v7 = let final self::Test2 #t19 = t in #t19.==(null) ?{core::num} null : #t19.{self::Test2::prop} = #t19.{self::Test2::prop}.{core::num::+}(self::getInt());
    core::num v8 = let final self::Test2 #t20 = t in #t20.==(null) ?{core::num} null : #t20.{self::Test2::prop} = #t20.{self::Test2::prop}.{core::num::+}(self::getNum());
    core::num v9 = let final self::Test2 #t21 = t in #t21.==(null) ?{core::num} null : #t21.{self::Test2::prop} = #t21.{self::Test2::prop}.{core::num::+}(self::getDouble());
    core::num v10 = let final self::Test2 #t22 = t in #t22.==(null) ?{core::num} null : #t22.{self::Test2::prop} = #t22.{self::Test2::prop}.{core::num::+}(1);
    core::num v11 = let final self::Test2 #t23 = t in #t23.==(null) ?{core::num} null : let final core::num #t24 = #t23.{self::Test2::prop} in let final core::num #t25 = #t23.{self::Test2::prop} = #t24.{core::num::+}(1) in #t24;
  }
}
class Test3 extends core::Object {
  field core::double prop = null;
  default constructor •() → void
    : super core::Object::•()
    ;
  static method test3(self::Test3 t) → void {
    core::double v3 = let final self::Test3 #t26 = t in #t26.==(null) ?{core::double} null : #t26.{self::Test3::prop} = self::getDouble();
    core::double v6 = let final self::Test3 #t27 = t in #t27.==(null) ?{core::double} null : let final core::double #t28 = #t27.{self::Test3::prop} in #t28.{core::num::==}(null) ?{core::double} #t27.{self::Test3::prop} = self::getDouble() : #t28;
    core::double v7 = let final self::Test3 #t29 = t in #t29.==(null) ?{core::double} null : #t29.{self::Test3::prop} = #t29.{self::Test3::prop}.{core::double::+}(self::getInt());
    core::double v8 = let final self::Test3 #t30 = t in #t30.==(null) ?{core::double} null : #t30.{self::Test3::prop} = #t30.{self::Test3::prop}.{core::double::+}(self::getNum());
    core::double v9 = let final self::Test3 #t31 = t in #t31.==(null) ?{core::double} null : #t31.{self::Test3::prop} = #t31.{self::Test3::prop}.{core::double::+}(self::getDouble());
    core::double v10 = let final self::Test3 #t32 = t in #t32.==(null) ?{core::double} null : #t32.{self::Test3::prop} = #t32.{self::Test3::prop}.{core::double::+}(1);
    core::double v11 = let final self::Test3 #t33 = t in #t33.==(null) ?{core::double} null : let final core::double #t34 = #t33.{self::Test3::prop} in let final core::double #t35 = #t33.{self::Test3::prop} = #t34.{core::double::+}(1) in #t34;
  }
}
static method getInt() → core::int
  return 0;
static method getNum() → core::num
  return 0;
static method getDouble() → core::double
  return 0.0;
static method main() → dynamic {}
