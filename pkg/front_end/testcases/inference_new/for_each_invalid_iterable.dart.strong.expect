library test;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;

static const field dynamic #errors = const <dynamic>["pkg/front_end/testcases/inference_new/for_each_invalid_iterable.dart:10:46: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::Iterable<dynamic>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::Iterable<dynamic>'.\n  for (int x in /*@error=InvalidAssignment*/ s) {}\n                                             ^", "pkg/front_end/testcases/inference_new/for_each_invalid_iterable.dart:11:52: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.async::Stream<dynamic>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.async::Stream<dynamic>'.\n  await for (int x in /*@error=InvalidAssignment*/ s) {}\n                                                   ^", "pkg/front_end/testcases/inference_new/for_each_invalid_iterable.dart:13:42: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.core::Iterable<dynamic>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.core::Iterable<dynamic>'.\n  for (y in /*@error=InvalidAssignment*/ s) {}\n                                         ^", "pkg/front_end/testcases/inference_new/for_each_invalid_iterable.dart:14:48: Error: A value of type 'dart.core::String' can't be assigned to a variable of type 'dart.async::Stream<dynamic>'.\nTry changing the type of the left hand side, or casting the right hand side to 'dart.async::Stream<dynamic>'.\n  await for (y in /*@error=InvalidAssignment*/ s) {}\n                                               ^"]/* from null */;
static method test() → dynamic async {
  core::String s;
  for (final dynamic #t1 in s as{TypeError} core::Iterable<dynamic>) {
    core::int x = #t1 as{TypeError} core::int;
  }
  await for (final dynamic #t2 in s as{TypeError} asy::Stream<dynamic>) {
    core::int x = #t2 as{TypeError} core::int;
  }
  core::int y;
  for (final dynamic #t3 in s as{TypeError} core::Iterable<dynamic>) {
    y = #t3 as{TypeError} core::int;
  }
  await for (final dynamic #t4 in s as{TypeError} asy::Stream<dynamic>) {
    y = #t4 as{TypeError} core::int;
  }
}
static method main() → dynamic {}
